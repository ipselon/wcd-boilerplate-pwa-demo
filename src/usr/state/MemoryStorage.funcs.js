import mergeWith from 'lodash/mergeWith';
import isArray from 'lodash/isArray';

let memoryStorage = {};

function mergeCustomizer(objValue, srcValue) {
  if (isArray(objValue)) {
    return srcValue;
  }
}

/**
 * This function is generated by Webcodesk. Replace this comment with a valuable description.
 *
 * @functionTypes {InMemoryTypes from ./MemoryStorage.props}
 */
export const saveInMemory = object => dispatch => {
  memoryStorage = { ...memoryStorage, ...object };
  dispatch({storage: memoryStorage});
};

/**
 * Retrieves the variables from the variable storage.
 *
 * @functionTypes {GetFromMemoryTypes from ./MemoryStorage.props}
 */
export const getFromMemory = () => dispatch => {
  dispatch({storage: memoryStorage});
};

/**
 * This function is generated by Webcodesk. Replace this comment with a valuable description.
 *
 * @functionTypes {InMemoryTypes from ./MemoryStorage.props}
 */
export const mergeInMemory = object => dispatch => {
  mergeWith(memoryStorage, object, mergeCustomizer);
  dispatch({storage: memoryStorage});
};